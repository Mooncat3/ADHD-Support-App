import nodemailer from "nodemailer";
/**
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç email —Å PDF (–∏–ª–∏ –¥—Ä—É–≥–∏–º –≤–ª–æ–∂–µ–Ω–∏–µ–º), –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç path (–ø—Ä—è–º–æ–π –ø—É—Ç—å) –∏ content (–µ—Å–ª–∏ –∏–∑ –±—É—Ñ–µ—Ä–∞).
 *
 * –î–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω nodemailer: `npm install nodemailer`.
 *
 * –¢—Ä–µ–±—É–µ—Ç—Å—è Google Account —Å –¥–≤—É—Ñ–∞–∫—Ç–æ—Ä–Ω–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–∞—Ä–æ–ª—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 *
 * @param {Object} config
 * @param {Object} config.auth - { user (–ø–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –∞–∫–∫–∞—É–Ω—Ç–∞), pass (–ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –Ω–µ –∞–∫–∫–∞—É–Ω—Ç–∞!) }
 * @param {string} config.to - –ö–æ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–∏—Å—å–º–æ
 * @param {string} config.subject - –¢–µ–º–∞ –ø–∏—Å—å–º–∞
 * @param {string} config.text - –¢–µ–∫—Å—Ç –ø–∏—Å—å–º–∞
 * @param {Object} config.attachment - –í–ª–æ–∂–µ–Ω–∏–µ —Å –ø–æ–ª—è–º–∏:
 *   - `filename`: string ‚Äî –∏–º—è —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –±—É—Ñ–µ—Ä–∞
 *   - `path`?: string ‚Äî –ø—É—Ç—å –¥–æ —Ñ–∞–π–ª–∞ –Ω–∞ –¥–∏—Å–∫–µ
 *   - `content`?: Buffer|string|Stream ‚Äî —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ (–±—É—Ñ–µ—Ä, —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ –ø–æ—Ç–æ–∫)
 *   - `contentType`?: string ‚Äî MIME-—Ç–∏–ø (–Ω–∞–ø—Ä–∏–º–µ—Ä, application/pdf), –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ `content`
 *
 */
export async function sendEmailWithAttachment({
  auth,
  to,
  subject,
  text,
  attachment,
}) {
  if (!auth?.user || !auth?.pass || !to || !subject || !attachment?.filename) {
    throw new Error("Missing required fields");
  }

  if (!attachment.path && !attachment.content) {
    throw new Error("Attachment must include either path or content");
  }

  const transporter = nodemailer.createTransport({
    service: "gmail",
    auth,
  });

  const mailOptions = {
    from: `"ADHD Support app üì¨" <${auth.user}>`,
    to,
    subject,
    text,
    attachments: [attachment],
  };

  try {
    const info = await transporter.sendMail(mailOptions);
    console.log("Email sent:", info.messageId);
    return info;
  } catch (err) {
    console.error("Failed to send email:", err);
    throw err;
  }
}
